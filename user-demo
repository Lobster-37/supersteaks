<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SuperSteaks - User Account Demo</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; background-color: #f0f4f8; }
    </style>
</head>
<body class="min-h-screen bg-gray-100 py-8">
    <div class="container mx-auto px-4">
        <div class="max-w-2xl mx-auto bg-white rounded-lg shadow-lg p-8">
            <h1 class="text-3xl font-bold text-indigo-800 mb-8 text-center">SuperSteaks User Account System Demo</h1>
            
            <!-- Current Status -->
            <div class="mb-8 p-4 bg-gray-50 rounded-lg">
                <h2 class="text-xl font-semibold mb-4">Current Status:</h2>
                <div id="status-display">
                    <p class="text-gray-600">Not logged in</p>
                </div>
            </div>
            
            <!-- Test Buttons -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
                <button id="test-register" class="bg-green-500 text-white px-6 py-3 rounded-lg hover:bg-green-600 transition">
                    Test Register
                </button>
                <button id="test-login" class="bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition">
                    Test Login
                </button>
                <button id="test-logout" class="bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 transition">
                    Test Logout
                </button>
                <button id="test-assignment" class="bg-purple-500 text-white px-6 py-3 rounded-lg hover:bg-purple-600 transition">
                    Test Team Assignment
                </button>
            </div>
            
            <!-- User Data Display -->
            <div class="bg-gray-50 rounded-lg p-4">
                <h3 class="text-lg font-semibold mb-2">User Data:</h3>
                <pre id="user-data" class="text-sm bg-white p-3 rounded border overflow-auto max-h-40">Loading...</pre>
            </div>
            
            <!-- Test Results -->
            <div id="test-results" class="mt-6"></div>
        </div>
    </div>

    <!-- Include our user account system -->
    <script src="js/user-accounts.js"></script>
    
    <script>
        // Demo functionality
        function updateDisplay() {
            const statusDisplay = document.getElementById('status-display');
            const userDataDisplay = document.getElementById('user-data');
            
            if (window.SuperSteaksAuth.isLoggedIn()) {
                const user = window.SuperSteaksAuth.getCurrentUser();
                const assignments = window.SuperSteaksAuth.getUserAssignments();
                
                statusDisplay.innerHTML = `
                    <p class="text-green-600 font-semibold">✅ Logged in as: ${user.username}</p>
                    <p class="text-sm text-gray-600">Email: ${user.email}</p>
                `;
                
                userDataDisplay.textContent = JSON.stringify({
                    user: user,
                    assignments: assignments
                }, null, 2);
            } else {
                statusDisplay.innerHTML = '<p class="text-gray-600">❌ Not logged in</p>';
                userDataDisplay.textContent = 'No user data - not logged in';
            }
        }
        
        function showResult(message, isSuccess = true) {
            const resultsDiv = document.getElementById('test-results');
            const colorClass = isSuccess ? 'bg-green-100 border-green-400 text-green-700' : 'bg-red-100 border-red-400 text-red-700';
            
            resultsDiv.innerHTML = `
                <div class="${colorClass} border px-4 py-3 rounded">
                    ${message}
                </div>
            `;
            
            setTimeout(() => {
                resultsDiv.innerHTML = '';
            }, 5000);
        }
        
        // Test functions
        document.getElementById('test-register').addEventListener('click', () => {
            try {
                const testUser = window.SuperSteaksAuth.register(
                    'testuser' + Math.floor(Math.random() * 1000),
                    'test@example.com',
                    'password123'
                );
                showResult(`Successfully registered user: ${testUser.username}`);
                updateDisplay();
            } catch (error) {
                showResult(`Registration failed: ${error.message}`, false);
            }
        });
        
        document.getElementById('test-login').addEventListener('click', () => {
            // First create a test user if none exists
            try {
                const testUsername = 'demouser';
                const testPassword = 'demo123';
                
                // Try to register demo user first
                try {
                    window.SuperSteaksAuth.register(testUsername, 'demo@supersteaks.com', testPassword);
                } catch (e) {
                    // User might already exist, that's ok
                }
                
                // Now try to login
                const user = window.SuperSteaksAuth.login(testUsername, testPassword);
                showResult(`Successfully logged in as: ${user.username}`);
                updateDisplay();
            } catch (error) {
                showResult(`Login failed: ${error.message}`, false);
            }
        });
        
        document.getElementById('test-logout').addEventListener('click', () => {
            window.SuperSteaksAuth.logout();
            showResult('Successfully logged out');
            updateDisplay();
        });
        
        document.getElementById('test-assignment').addEventListener('click', () => {
            if (!window.SuperSteaksAuth.isLoggedIn()) {
                showResult('Please log in first to test team assignment', false);
                return;
            }
            
            const teams = ['Barcelona', 'Real Madrid', 'Arsenal', 'Bayern München', 'Liverpool'];
            const randomTeam = teams[Math.floor(Math.random() * teams.length)];
            
            window.SuperSteaksAuth.addTeamAssignment('Test Championship', randomTeam);
            showResult(`Successfully assigned team: ${randomTeam}`);
            updateDisplay();
        });
        
        // Initial update
        updateDisplay();
        
        // Update display periodically
        setInterval(updateDisplay, 1000);
    </script>
</body>
</html>
